---
import '../../global.css'
import { firestore, getGame, getSession } from '../../lib/account'
import Editor from '../../components/big-interactive-pages/editor'
import StandardHead from '../../components/standard-head.astro'
import { signal } from '@preact/signals'
import type { PersistenceState } from '../../lib/state'

const session = await getSession(Astro.cookies)
if (!session) return Astro.redirect('/login', 302)

const game = await getGame(Astro.params.id!)
if (!game || game.ownerId !== session.user.id) return Astro.redirect('/404', 302)

let _persistenceState: PersistenceState
if (session.session.full) {
	if (game.unprotected) {
		await firestore.collection('games').doc(game.id).update({ unprotected: false })
		game.unprotected = false
	}
	if (Astro.cookies.get('sprigTempGame').value === game.id)
		Astro.cookies.delete('sprigTempGame', { path: '/' })

	_persistenceState = {
		kind: 'PERSISTED',
		showLoginPrompt: false,
		saveEmail: null,
		cloudSaveState: 'SAVED',
		game,
		stale: false
	}
} else {
	if (!game.unprotected) return Astro.redirect('/login', 302)
	if (game.ownerId !== session.user.id) return Astro.redirect('/404', 302)

	_persistenceState = {
		kind: 'PERSISTED',
		showLoginPrompt: true,
		saveEmail: session.user.email,
		cloudSaveState: 'SAVED',
		game,
		stale: false
	}
}

const persistenceState = signal<PersistenceState>(_persistenceState)
---

<html lang='en'>
	<head>
		<StandardHead title='Editor' />
	</head>
	<body>
		<Editor
			client:load
			loggedIn={session?.level ?? 'none'}
			persistenceState={persistenceState}
			cookies={{ outputAreaSize: Astro.cookies.get('outputAreaSize').number() }}
		/>
	</body>
</html>